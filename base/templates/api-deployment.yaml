kind: PersistentVolumeClaim
apiVersion: v1
metadata: 
    name: fett-data
spec:
    accessModes:
        - ReadWriteMany
    storageClassName: netapp-file-standard
    resources:
        requests:
            storage: 15Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: registry.redhat.io/rhscl/postgresql-13-rhel7
          ports:
          - containerPort: 5432
          envFrom:
          - secretRef:
              name: postgres-configuration
          env:
          - name: PGDATA
            value: /var/lib/pgsql/data
          - name: POSTGRES_DB
            value: db0
          volumeMounts:
          - mountPath: "/var/lib/pgsql"
            name: {{.Values.ENVDASH}}fett-data
      volumes:
        - name: {{.Values.ENVDASH}}fett-data
          persistentVolumeClaim:
            claimName: {{.Values.ENVDASH}}fett-data
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dependency-api-deployment
  labels:
    app: dependencyapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dependencyapi
  template:
    metadata:
      labels:
        app: dependencyapi
    spec:
      containers:
      - name: dependencyapi #requires 2 cores
      #  volumeMounts:
      #      - mountPath: /data
      #        name: dev-ceevee-data
        #strategy: 
        #  type: Recreate #recreate b/c the api is super heavy
        image: dependencytrack/apiserver
        #env:
        #  - name: ALPINE_DATABASE_URL
        #    value: jdbc:h2:/data/.dependency-track/db
        #  - name: ALPINE_DATA_DIRECTORY
        #    value: /data/.dependency-track
        resources:
          requests:
            memory: "4.5Gi"
            cpu: "2"
          limits:
            memory: "6Gi"
            cpu: "3"
        ports:
        - containerPort: 8080
        env:
          - name: ALPINE_DATABASE_URL
            value: jdbc:postgresql://{{.Values.ENVDASH}}postgres-service:5432/db0
        envFrom:
          - configMapRef:
              name: oidc-configuration
          - secretRef:
              name: postgres-configuration
      #volumes:
      #  - name: {{.Values.ENVDASH}}ceevee-data
          #persistentVolumeClaim:
          #  claimName: ceevee-data
  strategy:
    type: Recreate
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  #type: NodePort
  selector:
    app: dependencyapi
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      #nodePort: 30001
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: api-ingress
spec:
  rules:
    - host: {{.Values.ENVDASH}}nrm-vulnerability-track.apps.silver.devops.gov.bc.ca
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{.Values.ENVDASH}}api-service
                port:
                  number: 80
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: api-route
  annotations:
    #haproxy.router.openshift.io/ip_whitelist: 184.66.242.159 142.34.143.128/26 142.32.0.0/16 142.34.208.209 142.34.40.0/24 204.103.55.21 142.29.82.93
    haproxy.router.openshift.io/ip_whitelist: 142.22.0.0/16 142.23.0.0/16 142.24.0.0/16 142.25.0.0/16 142.26.0.0/16 142.27.0.0/16 142.28.0.0/16 142.29.0.0/16 142.30.0.0/16 142.31.0.0/16 142.32.0.0/16 142.33.0.0/16 142.34.0.0/16 142.35.0.0/16 142.36.0.0/16 184.66.242.159
  labels:
    app: dependency-api
    certbot-managed: 'true'
spec:
  host: {{.Values.ENVDASH}}nrm-vulnerability-track.apps.silver.devops.gov.bc.ca
  path: "/api"
  to:
    kind: Service
    name: {{.Values.ENVDASH}}api-service
    weight: 100
  port:
    targetPort: 8080
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: api-route-deep
  annotations:
    #haproxy.router.openshift.io/ip_whitelist: 184.66.242.159 142.34.143.128/26 142.32.0.0/16 142.34.208.209 142.34.40.0/24 204.103.55.21 142.29.82.93
    haproxy.router.openshift.io/ip_whitelist: 142.22.0.0/16 142.23.0.0/16 142.24.0.0/16 142.25.0.0/16 142.26.0.0/16 142.27.0.0/16 142.28.0.0/16 142.29.0.0/16 142.30.0.0/16 142.31.0.0/16 142.32.0.0/16 142.33.0.0/16 142.34.0.0/16 142.35.0.0/16 142.36.0.0/16 184.66.242.159
  labels:
    app: dependency-api
    certbot-managed: 'true'
spec:
  host: {{.Values.ENVDASH}}nrm-vulnerability-track.apps.silver.devops.gov.bc.ca
  path: "/.well-known"
  to:
    kind: Service
    name: {{.Values.ENVDASH}}api-service
    weight: 100
  port:
    targetPort: 8080
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: api-home
  annotations:
    #haproxy.router.openshift.io/ip_whitelist: 184.66.242.159 142.34.143.128/26 142.32.0.0/16 142.34.208.209 142.34.40.0/24 204.103.55.21 142.29.82.93
    haproxy.router.openshift.io/ip_whitelist: 142.22.0.0/16 142.23.0.0/16 142.24.0.0/16 142.25.0.0/16 142.26.0.0/16 142.27.0.0/16 142.28.0.0/16 142.29.0.0/16 142.30.0.0/16 142.31.0.0/16 142.32.0.0/16 142.33.0.0/16 142.34.0.0/16 142.35.0.0/16 142.36.0.0/16 184.66.242.159
    haproxy.router.openshift.io/rewrite-target: /
  labels:
    app: dependency-api
    certbot-managed: 'true'
spec:
  host: {{.Values.ENVDASH}}nrm-vulnerability-track.apps.silver.devops.gov.bc.ca
  path: "/api/home"
  to:
    kind: Service
    name: {{.Values.ENVDASH}}api-service
    weight: 100
  port:
    targetPort: 8080
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-policy
spec:
  podSelector: {}
  ingress:
  - from:
    - podSelector: 
        matchLabels:
            app: dependencyapi
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-external-policy
spec:
  podSelector: 
    matchLabels:
        app: dependencyapi
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          network.openshift.io/policy-group: ingress
  policyTypes:
  - Ingress
